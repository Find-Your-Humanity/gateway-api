name: Gateway API CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.PROJECT_NAME }}.kr-central-2.kcr.dev
        username: ${{ secrets.ACCESS_KEY }}
        password: ${{ secrets.ACCESS_SECRET_KEY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.PROJECT_NAME }}.kr-central-2.kcr.dev/${{ secrets.REPOSITORY_NAME }}/gateway-api:${{ github.sha }}
          ${{ secrets.PROJECT_NAME }}.kr-central-2.kcr.dev/${{ secrets.REPOSITORY_NAME }}/gateway-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Checkout Kubernetes manifests repository
      uses: actions/checkout@v4
      with:
        repository: Find-Your-Humanity/deploy-manifests
        path: deploy-manifests
        token: ${{ secrets.PAT }}

    - name: Update deployment manifest
      run: |
        IMAGE_TAG="${{ github.sha }}"
        
        # # gateway-api 폴더 생성
        # mkdir -p gateway-api
        
        # # deployment 파일 생성
        # cat > gateway-api/deployment-gateway-api.yaml << 'EOF'
        #   apiVersion: apps/v1
        #   kind: Deployment
        #   metadata:
        #     name: gateway-api
        #     namespace: captcha
        #     labels:
        #       app: gateway-api
        #   spec:
        #     replicas: 2
        #     selector:
        #       matchLabels:
        #         app: gateway-api
        #     template:
        #       metadata:
        #         labels:
        #           app: gateway-api
        #       spec:
        #         nodeSelector:
        #           pool-name: platform-pool
        #         containers:
        #           - name: gateway-api
        #             image: kc-sfacspace.kr-central-2.kcr.dev/team1-repo/gateway-api:IMAGE_TAG_PLACEHOLDER
        #             ports:
        #               - containerPort: 80
        #             env:
        #               - name: DB_HOST
        #                 value: "az-a.team1-db.1bb3c9ceb1db43928600b93b2a2b1d50.mysql.managed-service.kr-central-2.kakaocloud.com"
        #               - name: DB_PORT
        #                 value: "13306"
        #               - name: DB_USER
        #                 value: "realcatcha"
        #               - name: DB_PASSWORD
        #                 value: "realcatcha"
        #               - name: DB_NAME
        #                 value: "captcha"
        #               - name: JWT_SECRET_KEY
        #                 value: "realcatcha-jwt-secret-key-2024"
        #             resources:
        #               requests:
        #                 memory: "256Mi"
        #                 cpu: "200m"
        #               limits:
        #                 memory: "512Mi"
        #                 cpu: "500m"
        #             livenessProbe:
        #               httpGet:
        #                 path: /health
        #                 port: 80
        #               initialDelaySeconds: 30
        #               periodSeconds: 10
        #             readinessProbe:
        #               httpGet:
        #                 path: /health
        #                 port: 80
        #               initialDelaySeconds: 5
        #               periodSeconds: 5
        #         imagePullSecrets:
        #           - name: kcr-pull-secret
        #   ---
        #   apiVersion: v1
        #   kind: Service
        #   metadata:
        #     name: gateway-api-backend-service
        #     namespace: captcha
        #     labels:
        #       app: gateway-api
        #   spec:
        #     selector:
        #       app: gateway-api
        #     ports:
        #       - protocol: TCP
        #         port: 80
        #         targetPort: 80
        #     type: ClusterIP
        # EOF
        
        # 이미지 태그 교체
        # sed -i "s/IMAGE_TAG_PLACEHOLDER/$IMAGE_TAG/g" gateway-api/deployment-gateway-api.yaml
        if [ -f "gateway-api/deployment-gateway-api.yaml" ]; then
          sed -i "s/IMAGE_TAG_PLACEHOLDER/$IMAGE_TAG/g" gateway-api/deployment-gateway-api.yaml
        else
          echo "Warning: gateway-api/deployment-gateway-api.yaml file not found"
        fi
        
        # 변경사항 커밋 및 푸시
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add gateway-api/deployment-gateway-api.yaml
        git commit -m "Update gateway-api image to $IMAGE_TAG" || echo "No changes to commit"
        git push
      working-directory: ./deploy-manifests/gateway-api